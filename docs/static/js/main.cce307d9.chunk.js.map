{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","addCats","useState","inputValue","setinputValue","onSubmit","e","preventDefault","val","type","placeholder","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifts","map","img","id","title","images","downsized_medium","console","log","GiftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","setCategories","newCat","cats","ReactDOM","render","document","getElementById"],"mappings":"2LAGe,SAASA,EAAT,GAAmC,IAAZC,EAAW,EAAXA,QAAW,EACXC,mBAAS,IADE,mBACxCC,EADwC,KAC5BC,EAD4B,KAY/C,OACE,sBAAMC,SAPa,SAACC,GACpBA,EAAEC,iBACFN,EAAQE,GACRC,GAAc,SAACI,GAAD,MAAgB,OAI9B,SACE,uBACEC,KAAK,OACLC,YAAY,cACZC,MAAOR,EACPS,SAfe,SAACN,GACpBF,GAAc,SAACI,GAAD,OAAgBF,EAAEO,OAAOF,c,mCCa5BG,EApBD,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,0FACgFC,UAC7FH,GAFa,+BAKMI,MAAMF,GALZ,cAKPG,EALO,gBAMUA,EAAKC,OANf,uBAMLC,EANK,EAMLA,KAEFC,EAAQD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC9B,MAAO,CACLC,GAAE,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAKC,GACTC,MAAK,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAKE,MACZV,IAAG,OAAEQ,QAAF,IAAEA,GAAF,UAAEA,EAAKG,cAAP,aAAE,EAAaC,iBAAiBZ,QAZ1B,kBAeNM,GAfM,kCAiBbO,QAAQC,IAAR,MAjBa,0DAAH,sDCgBCC,EAbM,SAAC,GAAoB,IAAlBf,EAAiB,EAAjBA,IAAKU,EAAY,EAAZA,MAC3B,OACE,sBAAKM,UAAU,OAAf,UACE,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCYKS,EAfE,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECDP,SAACA,GAAc,IAAD,EACdb,mBAAS,CACjCoB,KAAM,GACNe,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAcxC,OATAC,qBAAU,WACR1B,EAASC,GAAU0B,MAAK,SAACC,GACvBH,EAAS,CACPjB,KAAMoB,EACNL,SAAS,SAGZ,CAACtB,IAEGuB,EDZ2BK,CAAa5B,GAAjCa,EADmB,EACzBN,KAAce,EADW,EACXA,QACtB,OACE,mCACE,sBAAKJ,UAAU,8CAAf,UACE,6BAAKlB,IACJsB,GAAW,2CACXT,EAAOJ,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA+BA,GAAZA,EAAIC,a,MEPlB,SAASkB,IAAiB,IAAD,EACF1C,mBAAS,CAAC,aADR,mBAC/B2C,EAD+B,KACnBC,EADmB,KAOtC,OACE,gCACE,8CAEA,cAAC9C,EAAD,CAAaC,QARF,SAAC8C,GACdD,GAAc,SAACE,GAAD,OAAWD,GAAX,mBAAsBC,UASlC,uBAEA,6BACGH,EAAWrB,KAAI,SAACT,GAAD,OACd,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,WClBzBkC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.cce307d9.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function AddCategory({ addCats }) {\r\n  const [inputValue, setinputValue] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    setinputValue((val) => (val = e.target.value));\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    addCats(inputValue);\r\n    setinputValue((val) => (val = \"\"));\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search Gifs\"\r\n        value={inputValue}\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  addCats: PropTypes.func.isRequired,\r\n};\r\n","const getGifts = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=OvVRIPMohXIt3wlTNTfoLqnadisGpVVc&q=${encodeURI(\r\n    category\r\n  )}&limit=10`;\r\n  try {\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifts = data.map((img) => {\r\n      return {\r\n        id: img?.id,\r\n        title: img?.title,\r\n        url: img?.images?.downsized_medium.url,\r\n      };\r\n    });\r\n    return gifts;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\nexport default getGifts;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GiftGridItem = ({ url, title }) => {\r\n  return (\r\n    <div className=\"item\">\r\n      <img src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGiftGridItem.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default GiftGridItem;\r\n","import React from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GiftGrifItem from \"./GiftGridItem\";\r\n\r\nconst GiftGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n  return (\r\n    <>\r\n      <div className=\"giftGrid animate__animated animate__flipInX\">\r\n        <h2>{category}</h2>\r\n        {loading && <p>loading...</p>}\r\n        {images.map((img) => (\r\n          <GiftGrifItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GiftGrid;\r\n","import { useState, useEffect } from \"react\";\r\nimport getGifts from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setstate] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n  useEffect(() => {\r\n    getGifts(category).then((imgs) => {\r\n      setstate({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport GiftGrid from \"./components/GiftGrid\";\r\nimport \"./GiftExpertApp.css\";\r\n\r\nexport default function GiftExpertApp() {\r\n  const [categories, setCategories] = useState([\"football\"]);\r\n\r\n  const AddCat = (newCat) => {\r\n    setCategories((cats) => [newCat, ...cats]);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>GifExpertApp</h2>\r\n\r\n      <AddCategory addCats={AddCat} />\r\n\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GiftGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GiftExpertApp from './GiftExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}